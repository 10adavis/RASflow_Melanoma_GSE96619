import pandas as pd
configfile: "configs/config_trim.yaml"

samples = pd.read_csv(config["METAFILE"], sep = '\t', header = 0)['sample']
end = config["END"]

def trimFiles(wildcards):
    if (end == "pair"):
        forward_trim = expand(config["OUTPUTPATH"] + "/{sample}_R1_val_1.fq.gz", sample = samples)
        return forward_trim
    else:
        read_trim = expand(config["OUTPUTPATH"] + "/{sample}_trimmed.fq.gz", sample = samples)
        return read_trim

rule all:
    input:
        trimFiles

rule trim:
    output:
        read_trim = config["OUTPUTPATH"] + "/{sample}_R1_val_1.fq.gz" if config["END"]=="pair" else config["OUTPUTPATH"] + "/{sample}_trimmed.fq.gz",
    params:
        inputpath = config["INPUTPATH"],
        outputpath = config["OUTPUTPATH"]
    run:
        if config["END"]=="pair":
            shell("trim_galore --fastqc -j 4 --paired --basename {wildcards.sample} -o {params.outputpath} {params.inputpath}/{wildcards.sample}*R1*fastq.gz {params.inputpath}/{wildcards.sample}*R2*fastq.gz")
        else:
            shell("trim_galore --fastqc -j 4 --basename {wildcards.sample} -o {params.outputpath} {params.inputpath}/{wildcards.sample}*fastq.gz")

