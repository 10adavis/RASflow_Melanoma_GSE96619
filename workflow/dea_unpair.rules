import pandas as pd
configfile: "../configs/config_trans.yaml"

samples = pd.read_table(config["SAMPLES"], header = 0)['sample']
groups = pd.read_table(config["SAMPLES"], header = 0)['group']

rule all:
    input:
        edger_CTR20h_EE220h_dea = config["OUTPUTPATH"] + "DEA/edger/dea_CTR20h_EE220h.csv",
        edger_CTR20h_EE220h_deg = config["OUTPUTPATH"] + "DEA/edger/deg_CTR20h_EE220h.csv"

# The rule below is not flexibal, needs to change manually, the used script combine_batch5_Liver_Invivo7.sh is only suitable for batch5_Liver_Invivo7
rule combineSamples:
    input:
        geneCount = expand(config["OUTPUTPATH"] + "countFile/{sample}.countmerged.idx", sample = samples)
    output:
        expand(config["OUTPUTPATH"] + "countFile/{group}.countmerged.idx", group = groups)
    params:
        path = config["OUTPUTPATH"] + "countFile"
    shell:
        "cp ../scripts/combine_batch5_Liver_Invivo7.sh {params.path} && cd {params.path} && bash combine_batch5_Liver_Invivo7.sh && rm combine_batch5_Liver_Invivo7.sh"

rule prepareDEA:
    input:
        CTR20h = config["OUTPUTPATH"] + "countFile/CTR20h.countmerged.idx",
        CTR48h = config["OUTPUTPATH"] + "countFile/CTR48h.countmerged.idx",
        EE220h = config["OUTPUTPATH"] + "countFile/EE220h.countmerged.idx",
        EE248h = config["OUTPUTPATH"] + "countFile/EE248h.countmerged.idx",
        BPA20h = config["OUTPUTPATH"] + "countFile/BPA20h.countmerged.idx",
        MXC20h = config["OUTPUTPATH"] + "countFile/MXC20h.countmerged.idx"
    output:
        CTR20h_EE220h = config["OUTPUTPATH"] + "DEA/CTR20h_EE220h",
        CTR48h_EE248h = config["OUTPUTPATH"] + "DEA/CTR48h_EE248h",
        CTR20h_MXC20h = config["OUTPUTPATH"] + "DEA/CTR20h_MXC20h",
        CTR20h_BPA20h = config["OUTPUTPATH"] + "DEA/CTR20h_BPA20h"
    shell:
        "paste {input.CTR20h} <(cut -f2- {input.EE220h}) >> {output.CTR20h_EE220h} && "
        "paste {input.CTR48h} <(cut -f2- {input.EE248h}) >> {output.CTR48h_EE248h} && "
        "paste {input.CTR20h} <(cut -f2- {input.MXC20h}) >> {output.CTR20h_MXC20h} && "
        "paste {input.CTR20h} <(cut -f2- {input.BPA20h}) >> {output.CTR20h_BPA20h}"
rule DEA:
    input:
        CTR20h_EE220h = config["OUTPUTPATH"] + "DEA/CTR20h_EE220h",
        CTR48h_EE248h = config["OUTPUTPATH"] + "DEA/CTR48h_EE248h",
        CTR20h_MXC20h = config["OUTPUTPATH"] + "DEA/CTR20h_MXC20h",
        CTR20h_BPA20h = config["OUTPUTPATH"] + "DEA/CTR20h_BPA20h"
    output:
        CTR20h_EE220h_norm = config["OUTPUTPATH"] + "DEA/CTR20h_EE220h_norm.csv",
        CTR48h_EE248h_norm = config["OUTPUTPATH"] + "DEA/CTR48h_EE248h_norm.csv",
        CTR20h_MXC20h_norm = config["OUTPUTPATH"] + "DEA/CTR20h_MXC20h_norm.csv",
        CTR20h_BPA20h_norm = config["OUTPUTPATH"] + "DEA/CTR20h_BPA20h_norm.csv",
        edger_CTR20h_EE220h_dea = config["OUTPUTPATH"] + "DEA/edger/dea_CTR20h_EE220h.csv",
        edger_CTR48h_EE248h_dea = config["OUTPUTPATH"] + "DEA/edger/dea_CTR48h_EE248h.csv",
        edger_CTR20h_MXC20h_dea = config["OUTPUTPATH"] + "DEA/edger/dea_CTR20h_MXC20h.csv",
        edger_CTR20h_BPA20h_dea = config["OUTPUTPATH"] + "DEA/edger/dea_CTR20h_BPA20h.csv",
        edger_CTR20h_EE220h_deg = config["OUTPUTPATH"] + "DEA/edger/deg_CTR20h_EE220h.csv",
        edger_CTR48h_EE248h_deg = config["OUTPUTPATH"] + "DEA/edger/deg_CTR48h_EE248h.csv",
        edger_CTR20h_MXC20h_deg = config["OUTPUTPATH"] + "DEA/edger/deg_CTR20h_MXC20h.csv",
        edger_CTR20h_BPA20h_deg = config["OUTPUTPATH"] + "DEA/edger/deg_CTR20h_BPA20h.csv"
    shell:
        "Rscript ../scripts/dea_edger_unpair.R {input.CTR20h_EE220h} 6 6 {output.CTR20h_EE220h_norm} {output.edger_CTR20h_EE220h_dea} {output.edger_CTR20h_EE220h_deg} && "
        "Rscript ../scripts/dea_edger_unpair.R {input.CTR48h_EE248h} 3 5 {output.CTR48h_EE248h_norm} {output.edger_CTR48h_EE248h_dea} {output.edger_CTR48h_EE248h_deg} && "
        "Rscript ../scripts/dea_edger_unpair.R {input.CTR20h_MXC20h} 6 6 {output.CTR20h_MXC20h_norm} {output.edger_CTR20h_MXC20h_dea} {output.edger_CTR20h_MXC20h_deg} && "
        "Rscript ../scripts/dea_edger_unpair.R {input.CTR20h_BPA20h} 6 6 {output.CTR20h_BPA20h_norm} {output.edger_CTR20h_BPA20h_dea} {output.edger_CTR20h_BPA20h_deg}"
